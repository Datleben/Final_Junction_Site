@model List<Final_Junction_Site.Models.Site>

@{
    ViewData["Title"] = "Site Listings";
}

<!-- Bootstrap CSS for responsive and modern UI -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.5.0/dist/css/bootstrap.min.css" rel="stylesheet">

<div class="container mt-5">
    <h2 class="mb-4">Favorite Site</h2>

    <!-- Search and filter row -->
    <div class="row mb-4">
        <div class="col-md-6">
            <input type="text" class="form-control" id="searchInput" placeholder="Search sites...">
        </div>
        <div class="col-md-6">
            <select class="form-select" id="tagFilter">
                <option value="">All Tags</option>
                <!-- Tags are assumed to be fetched from the controller and added here dynamically -->
            </select>
        </div>
    </div>

    <!-- Cards display for site listings -->
    <div class="row row-cols-1 row-cols-md-3 g-4" id="siteGrid">
        @foreach (var site in Model)
        {
            <div class="col">
                <div class="card h-100" data-tags="@site.Tags">
                    <!-- Image at the top of the card -->
                    <img src="@site.ThumbnailURL" class="card-img-top" alt="@site.SiteName">
                    <div class="card-body">
                        <!-- Site name and description -->
                        <h5 class="card-title">@site.SiteName</h5>
                        <p class="card-text">@site.Description</p>
                        <!-- Trend score displayed in muted text -->
                        <p class="card-text"><small class="text-muted">Trend Score: @site.TrendScore</small></p>
                    </div>
                    <div class="card-footer">
                        <!-- Visit site button -->
                        <a href="@site.URL" class="btn btn-primary" target="_blank">Visit Site</a>
                        <!-- Button to show more details -->
                        <a asp-action="Details" asp-controller="Site" asp-route-SiteId="@site.SiteId" class="btn btn-secondary">Show Details</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Bootstrap Bundle with Popper for interactive elements -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.5.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const searchInput = document.getElementById('searchInput');
        const tagFilter = document.getElementById('tagFilter');
        const cards = document.querySelectorAll('#siteGrid .card');

        searchInput.addEventListener('input', filterSites);
        tagFilter.addEventListener('change', filterSites);

        function filterSites() {
            const searchText = searchInput.value.toLowerCase();
            const filterTag = tagFilter.value;

            cards.forEach(card => {
                const title = card.querySelector('.card-title').textContent.toLowerCase();
                const description = card.querySelector('.card-text').textContent.toLowerCase();
                const tags = card.getAttribute('data-tags') ? card.getAttribute('data-tags').toLowerCase() : '';

                // Determine if the card matches the search criteria and tags
                const matchesSearch = searchText === '' || title.includes(searchText) || description.includes(searchText);
                const matchesTag = filterTag === '' || tags.includes(filterTag);

                // Apply or remove 'invisible' class based on whether the card matches
                if (matchesSearch && matchesTag) {
                    card.classList.remove('invisible');
                    card.style.height = '';
                } else {
                    card.classList.add('invisible');
                    card.style.height = '0';
                }
            });
        }
    });
</script>

<style>
    .invisible {
        visibility: hidden;
        position: absolute;
        z-index: -1;
    }

    .card:hover {
        transform: scale(1.03);
        transition: transform 0.3s ease-in-out;
    }
</style>

